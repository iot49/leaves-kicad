esphome:
  name: can-bus

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  level: INFO
  # level: DEBUG

# Enable Home Assistant API
api:
  encryption:
    key: "Zn5o+KNP/Xos3Lok7058iuYROBPCTEpIGt2e1mwQn+M="

ota:
  password: "b5a8214c792dc12c9f2ba6a98a75c7dd"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Can-Bus Fallback Hotspot"
    password: "a9EORZNtLvAX"

captive_portal:

# Canbus

canbus:
  - platform: esp32_can
    tx_pin: GPIO25
    rx_pin: GPIO26
    can_id: 100       # can id for transmitting frames
    bit_rate: 250kbps # rv-c
    on_frame:
    - can_id:      0  # listen to all messages
      can_id_mask: 0
      use_extended_id: true
      then:
        - lambda: |-
            char buf[29];
            // DGN
            // Source Address (SA)
            // Priority
            // Data (8 bytes)
            int dgn = (can_id >>8) & 0x1ffff;
            int pri = (can_id >> 26) & 0b111;
            int sa  = can_id & 0xff;
            snprintf((char*)&buf, sizeof(buf), "%05X,%02X,%1X,%02X%02X%02X%02X%02X%02X%02X%02X", dgn, sa, pri, x[0], x[1], x[2], x[3], x[4], x[5], x[6], x[7]);
            id(rvc_rx).publish_state((const char*)&buf);
            ESP_LOGI("can", "%s", (const char*)&buf);

text_sensor:
  - platform: version # not sure what this should be, version works
    name: RV-C rx
    id: rvc_rx
  

# Red LED shows status: 
#   Blink slowly (about every second) when a warning is active.
#   Blink quickly (multiple times per second) when an error is active.
#   Off otherwise.
status_led:
  pin: 
    number: GPIO2
    inverted: true

# Green and Blue LEDs
output:
- platform: ledc
  id: led_green
  pin: 
    number: GPIO15
    inverted: true
- platform: ledc
  id: led_blue
  pin: 
    number: GPIO4
    inverted: true

light: 
- platform: monochromatic
  name: "Green LED"
  output: led_green
- platform: monochromatic
  name: "Blue LED"
  output: led_blue
  